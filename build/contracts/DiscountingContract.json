{
  "contractName": "DiscountingContract",
  "abi": [
    {
      "inputs": [],
      "name": "getContractRule",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "discount",
              "type": "uint256"
            }
          ],
          "internalType": "struct DiscountingTypes.ContractRule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getContractRule\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"}],\"internalType\":\"struct DiscountingTypes.ContractRule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingContract.sol\":\"DiscountingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingContract.sol\":{\"keccak256\":\"0x1cb5fb450723fd1849a450b2821af1b8f0a1446aea611b732cc971ed4b0886a5\",\"urls\":[\"bzz-raw://0ca860551557f48cb0390bc56fdb2dbce25f6a3431986679da0fdb6131063b28\",\"dweb:/ipfs/QmU6ikrNckPsoVCVQMu3Ees7adaEQuqXQ7A5jqMnL7d7qP\"]},\"/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingTypes.sol\":{\"keccak256\":\"0x7faf78da3ad2b6837852edbf2eb08b44619b7f8d135daa2d9dedace8a9accfc7\",\"urls\":[\"bzz-raw://f0985a2fd6c3ac445b932c9148585675a1487d9a1425fe2ede4d62149bacc5dc\",\"dweb:/ipfs/QmVN7fn3Qr5aFD34hFJd87M2iApotTpAW6GcseP3jHE5Zx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060cc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b54f14a414602d575b600080fd5b60336047565b604051603e9190607f565b60405180910390f35b604d6065565b5060408051808201909152607b808252602082015290565b604051806040016040528060008152602001600081525090565b81518152602091820151918101919091526040019056fea2646970667358221220aadab1574ac85f7e69d799565118c0847f40978eb26601c83556f928c0b0ae7e64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063b54f14a414602d575b600080fd5b60336047565b604051603e9190607f565b60405180910390f35b604d6065565b5060408051808201909152607b808252602082015290565b604051806040016040528060008152602001600081525090565b81518152602091820151918101919091526040019056fea2646970667358221220aadab1574ac85f7e69d799565118c0847f40978eb26601c83556f928c0b0ae7e64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "94:174:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "94:174:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;199:19;;:::i;:::-;-1:-1:-1;237:21:0;;;;;;;;;250:3;237:21;;;;;;;150:115;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;695:338::-;307:23;;646:37;;482:4;471:16;;;465:23;542:14;;;646:37;;;;880:2;865:18;;851:182::o",
  "source": "pragma solidity ^0.6.12;\npragma experimental ABIEncoderV2;\n\nimport \"./DiscountingTypes.sol\";\n\ncontract DiscountingContract is DiscountingTypes {\n\n    function getContractRule() external view returns(ContractRule memory) {\n        return ContractRule(123,123);\n    }\n\n}\n\n",
  "sourcePath": "/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingContract.sol",
  "ast": {
    "absolutePath": "/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingContract.sol",
    "exportedSymbols": {
      "DiscountingContract": [
        17
      ]
    },
    "id": 18,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "absolutePath": "/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingTypes.sol",
        "file": "./DiscountingTypes.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 18,
        "sourceUnit": 623,
        "src": "60:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "DiscountingTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "126:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DiscountingTypes_$622",
                "typeString": "contract DiscountingTypes"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "126:16:0"
          }
        ],
        "contractDependencies": [
          622
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          622
        ],
        "name": "DiscountingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "220:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313233",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "250:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313233",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "254:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "id": 10,
                      "name": "ContractRule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "237:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ContractRule_$603_storage_ptr_$",
                        "typeString": "type(struct DiscountingTypes.ContractRule storage pointer)"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "237:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractRule_$603_memory_ptr",
                      "typeString": "struct DiscountingTypes.ContractRule memory"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 14,
                  "nodeType": "Return",
                  "src": "230:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b54f14a4",
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractRule",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16,
                  "src": "199:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ContractRule_$603_memory_ptr",
                    "typeString": "struct DiscountingTypes.ContractRule"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "ContractRule",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 603,
                    "src": "199:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractRule_$603_storage_ptr",
                      "typeString": "struct DiscountingTypes.ContractRule"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:21:0"
            },
            "scope": 17,
            "src": "150:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 18,
        "src": "94:174:0"
      }
    ],
    "src": "0:270:0"
  },
  "legacyAST": {
    "absolutePath": "/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingContract.sol",
    "exportedSymbols": {
      "DiscountingContract": [
        17
      ]
    },
    "id": 18,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "absolutePath": "/home/oem/Dropbox/WORK/freelance/dynamic-discounting-contracts/contracts/DiscountingTypes.sol",
        "file": "./DiscountingTypes.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 18,
        "sourceUnit": 623,
        "src": "60:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "DiscountingTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "126:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DiscountingTypes_$622",
                "typeString": "contract DiscountingTypes"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "126:16:0"
          }
        ],
        "contractDependencies": [
          622
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          622
        ],
        "name": "DiscountingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "220:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313233",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "250:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313233",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "254:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        "value": "123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        },
                        {
                          "typeIdentifier": "t_rational_123_by_1",
                          "typeString": "int_const 123"
                        }
                      ],
                      "id": 10,
                      "name": "ContractRule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "237:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ContractRule_$603_storage_ptr_$",
                        "typeString": "type(struct DiscountingTypes.ContractRule storage pointer)"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "237:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractRule_$603_memory_ptr",
                      "typeString": "struct DiscountingTypes.ContractRule memory"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 14,
                  "nodeType": "Return",
                  "src": "230:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b54f14a4",
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractRule",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16,
                  "src": "199:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ContractRule_$603_memory_ptr",
                    "typeString": "struct DiscountingTypes.ContractRule"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7,
                    "name": "ContractRule",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 603,
                    "src": "199:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ContractRule_$603_storage_ptr",
                      "typeString": "struct DiscountingTypes.ContractRule"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:21:0"
            },
            "scope": 17,
            "src": "150:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 18,
        "src": "94:174:0"
      }
    ],
    "src": "0:270:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-12T19:32:22.738Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}